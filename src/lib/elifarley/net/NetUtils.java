/*CopyrightPortions of this software are Copyright (c) 1993 - 2001, Chad Z. Hower (Kudzu) and the Indy Pit Crew - http://www.nevrona.com/Indy/LicenseRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:*	Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. *	Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation, about box and/or other materials provided with the distribution. *	No personal names or organizations names associated with the Indy project may be used to endorse or promote products derived from this software without specific prior written permission of the specific individual or organization. THIS SOFTWARE IS PROVIDED BY Chad Z. Hower (Kudzu) and the Indy Pit Crew "AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. Translation to java and modifications by Elifarley C. Coelho*/package elifarley.net;public class NetUtils {	public static final String unsafeChars = " *#%<>";		public static String URLDecode(String URL) {		char esc[] = new char[2];	  	int charCode;	  	StringBuffer result = new StringBuffer(URL.length());	  	String s;	  	URL = URL.replace('+', ' ');	  	int i = 0;	  	char aChar;	  	while (i < URL.length() ) {	    	aChar = URL.charAt(i++);	    	if (aChar != '%') {	      		result.append(aChar);	    	} else {	      		try {	        		s = URL.substring(i, i + 2);	        		i += 2;	        		charCode = Integer.parseInt(s, 16);	        		if ( (charCode > 0) && (charCode < 256) ) 	          			result.append( (char)charCode );	      		} catch(Exception e) {	      			e.printStackTrace();	      		}	    	}	 	}	 		 	return result.toString();	 		}	public static String URLEncode(String psSrc) {		StringBuffer result = new StringBuffer((int)(1.3 * psSrc.length() ));		char aChar;		for (int i = 0; i < psSrc.length() ; i++) {			aChar = psSrc.charAt(i);			if ( aChar >= 0x80 || unsafeChars.indexOf(aChar) != -1 ) {				result.append('%').append(Integer.toHexString( aChar ) );			} else {				result.append(aChar);			}					}			return result.toString();		}}