/* NameValueString -- Deals with name - value pairs. * Copyright (C) 2001 Elifarley Callado Coelho  * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License, version 2, * as published by the Free Software Foundation; * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. * See the file "COPYING" for the software license.  * Elifarley Callado Coelho * Belo Horizonte, Brazil * elifarley@yahoo.com * http://www.geocities.com/elifarley/ *  */ package elifarley.util;import java.util.Vector;public class NameValueString {		protected int index = -1;	protected char sep = '=';	protected String ps;		public NameValueString(String s, char sep) {		update(s, sep);	}		public NameValueString(String s) {		update(s);	}			public NameValueString(String name, String value) {		update(name + sep + value);	}	public NameValueString(String name, String value, char sep) {		this.sep = sep;		update(name + sep + value);	}	public void setSep(char sep) {		update(sep);	}		public char getSep() {		return sep;	}		public void update(String s) {		this.ps = new String(s);		index = ps.indexOf(sep, 0);			}		public void update(char sep) {		this.sep = sep;		index = ps.indexOf(this.sep, 0);	}		public void update(String s, char sep) {		this.sep = sep;		this.ps = new String(s);		index = ps.indexOf(this.sep, 0);	}	public String name() {		if (ps != null && index >= 0)			return ps.substring(0, index).trim();		else			return new String("");	}			public NameValueString value() {		if (ps != null)	{				if (index >= 0)				return new NameValueString(ps.substring(index + 1).trim());			else				return new NameValueString(ps.trim());		} else			return new NameValueString("");	}			public StringListVector split(char sep){		return StringUtil.split(ps, sep);	}    public String toString() {		return ps.trim();	}	}