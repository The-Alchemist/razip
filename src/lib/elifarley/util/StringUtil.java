/* StringUtil -- Some string utilities. * Copyright (C) 2001 Elifarley Callado Coelho  * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License, version 2, * as published by the Free Software Foundation; * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * You should have received a copy of the GNU General Public License * along with this program; if not, write to the Free Software * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. * See the file "COPYING" for the software license.  * Elifarley Callado Coelho * Belo Horizonte, Brazil * elifarley@yahoo.com * http://www.geocities.com/elifarley/ *  */ package elifarley.util;public class StringUtil {	public static final String MARK_CHARS = "-_.!~*'()";	public static final String RESERVED_CHARS = ";/?:@&=+$,";		public static StringListVector split(String s, char sep){				StringListVector result = new StringListVector();				if (s.indexOf(sep, 0) == -1) {			result.addElement(new NameValueString(s));			return result;		}				int i = -1, newI;		while (true) {			newI = s.indexOf(sep, i + 1);			if (newI == -1) break;			result.addElement( new NameValueString(s.substring(i + 1,  i = newI ).trim() ) );		}				return result;	}	public static boolean isAlpha(char c) {		return ( 'a' <= c && c <= 'z' ) || ('A' <= c && c <= 'Z');	}	public static boolean isDigit(char c) {		return '0' <= c && c <= '9';	}	public static boolean isAlphaNum(char c) {		return  isAlpha(c) || isDigit(c);	}	public static boolean isHexDigit(char c) {		return isDigit(c) || ('a' <= c && c <= 'f') || ('A' <= c && c <= 'F');	}	public static boolean isMark(char c) {		return MARK_CHARS.indexOf(c) != -1;	}	public static boolean isReserved(char c) {		return RESERVED_CHARS.indexOf(c) != -1;	}	public static boolean isUnreserved(char c) {		return isAlphaNum(c) || isMark(c);	}      }